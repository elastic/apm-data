// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: system.proto

package modelpb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type System struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Process       *SystemProcess         `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
	Filesystem    *SystemFilesystem      `protobuf:"bytes,2,opt,name=filesystem,proto3" json:"filesystem,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *System) Reset() {
	*x = System{}
	mi := &file_system_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*System) ProtoMessage() {}

func (x *System) ProtoReflect() protoreflect.Message {
	mi := &file_system_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use System.ProtoReflect.Descriptor instead.
func (*System) Descriptor() ([]byte, []int) {
	return file_system_proto_rawDescGZIP(), []int{0}
}

func (x *System) GetProcess() *SystemProcess {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *System) GetFilesystem() *SystemFilesystem {
	if x != nil {
		return x.Filesystem
	}
	return nil
}

type SystemProcess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           *SystemProcessCPU      `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	State         string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Cmdline       string                 `protobuf:"bytes,3,opt,name=cmdline,proto3" json:"cmdline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemProcess) Reset() {
	*x = SystemProcess{}
	mi := &file_system_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemProcess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemProcess) ProtoMessage() {}

func (x *SystemProcess) ProtoReflect() protoreflect.Message {
	mi := &file_system_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemProcess.ProtoReflect.Descriptor instead.
func (*SystemProcess) Descriptor() ([]byte, []int) {
	return file_system_proto_rawDescGZIP(), []int{1}
}

func (x *SystemProcess) GetCpu() *SystemProcessCPU {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *SystemProcess) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SystemProcess) GetCmdline() string {
	if x != nil {
		return x.Cmdline
	}
	return ""
}

type SystemProcessCPU struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemProcessCPU) Reset() {
	*x = SystemProcessCPU{}
	mi := &file_system_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemProcessCPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemProcessCPU) ProtoMessage() {}

func (x *SystemProcessCPU) ProtoReflect() protoreflect.Message {
	mi := &file_system_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemProcessCPU.ProtoReflect.Descriptor instead.
func (*SystemProcessCPU) Descriptor() ([]byte, []int) {
	return file_system_proto_rawDescGZIP(), []int{2}
}

func (x *SystemProcessCPU) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

type SystemFilesystem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MountPoint    string                 `protobuf:"bytes,1,opt,name=mount_point,json=mountPoint,proto3" json:"mount_point,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemFilesystem) Reset() {
	*x = SystemFilesystem{}
	mi := &file_system_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemFilesystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemFilesystem) ProtoMessage() {}

func (x *SystemFilesystem) ProtoReflect() protoreflect.Message {
	mi := &file_system_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemFilesystem.ProtoReflect.Descriptor instead.
func (*SystemFilesystem) Descriptor() ([]byte, []int) {
	return file_system_proto_rawDescGZIP(), []int{3}
}

func (x *SystemFilesystem) GetMountPoint() string {
	if x != nil {
		return x.MountPoint
	}
	return ""
}

var File_system_proto protoreflect.FileDescriptor

const file_system_proto_rawDesc = "" +
	"\n" +
	"\fsystem.proto\x12\x0eelastic.apm.v1\"\x83\x01\n" +
	"\x06System\x127\n" +
	"\aprocess\x18\x01 \x01(\v2\x1d.elastic.apm.v1.SystemProcessR\aprocess\x12@\n" +
	"\n" +
	"filesystem\x18\x02 \x01(\v2 .elastic.apm.v1.SystemFilesystemR\n" +
	"filesystem\"s\n" +
	"\rSystemProcess\x122\n" +
	"\x03cpu\x18\x01 \x01(\v2 .elastic.apm.v1.SystemProcessCPUR\x03cpu\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x12\x18\n" +
	"\acmdline\x18\x03 \x01(\tR\acmdline\"1\n" +
	"\x10SystemProcessCPU\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\tR\tstartTime\"3\n" +
	"\x10SystemFilesystem\x12\x1f\n" +
	"\vmount_point\x18\x01 \x01(\tR\n" +
	"mountPointB+Z)github.com/elastic/apm-data/model/modelpbb\x06proto3"

var (
	file_system_proto_rawDescOnce sync.Once
	file_system_proto_rawDescData []byte
)

func file_system_proto_rawDescGZIP() []byte {
	file_system_proto_rawDescOnce.Do(func() {
		file_system_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_system_proto_rawDesc), len(file_system_proto_rawDesc)))
	})
	return file_system_proto_rawDescData
}

var file_system_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_system_proto_goTypes = []any{
	(*System)(nil),           // 0: elastic.apm.v1.System
	(*SystemProcess)(nil),    // 1: elastic.apm.v1.SystemProcess
	(*SystemProcessCPU)(nil), // 2: elastic.apm.v1.SystemProcessCPU
	(*SystemFilesystem)(nil), // 3: elastic.apm.v1.SystemFilesystem
}
var file_system_proto_depIdxs = []int32{
	1, // 0: elastic.apm.v1.System.process:type_name -> elastic.apm.v1.SystemProcess
	3, // 1: elastic.apm.v1.System.filesystem:type_name -> elastic.apm.v1.SystemFilesystem
	2, // 2: elastic.apm.v1.SystemProcess.cpu:type_name -> elastic.apm.v1.SystemProcessCPU
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_system_proto_init() }
func file_system_proto_init() {
	if File_system_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_system_proto_rawDesc), len(file_system_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_system_proto_goTypes,
		DependencyIndexes: file_system_proto_depIdxs,
		MessageInfos:      file_system_proto_msgTypes,
	}.Build()
	File_system_proto = out.File
	file_system_proto_goTypes = nil
	file_system_proto_depIdxs = nil
}
