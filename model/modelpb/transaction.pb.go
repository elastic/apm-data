// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: transaction.proto

package modelpb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Transaction struct {
	state                 protoimpl.MessageState      `protogen:"open.v1"`
	SpanCount             *SpanCount                  `protobuf:"bytes,1,opt,name=span_count,json=spanCount,proto3" json:"span_count,omitempty"`
	UserExperience        *UserExperience             `protobuf:"bytes,2,opt,name=user_experience,json=userExperience,proto3" json:"user_experience,omitempty"`
	Custom                []*KeyValue                 `protobuf:"bytes,3,rep,name=custom,proto3" json:"custom,omitempty"`
	Marks                 map[string]*TransactionMark `protobuf:"bytes,4,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Message               *Message                    `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Type                  string                      `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Name                  string                      `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Result                string                      `protobuf:"bytes,8,opt,name=result,proto3" json:"result,omitempty"`
	Id                    string                      `protobuf:"bytes,9,opt,name=id,proto3" json:"id,omitempty"`
	DurationHistogram     *Histogram                  `protobuf:"bytes,10,opt,name=duration_histogram,json=durationHistogram,proto3" json:"duration_histogram,omitempty"`
	DroppedSpansStats     []*DroppedSpanStats         `protobuf:"bytes,11,rep,name=dropped_spans_stats,json=droppedSpansStats,proto3" json:"dropped_spans_stats,omitempty"`
	DurationSummary       *SummaryMetric              `protobuf:"bytes,12,opt,name=duration_summary,json=durationSummary,proto3" json:"duration_summary,omitempty"`
	RepresentativeCount   float64                     `protobuf:"fixed64,13,opt,name=representative_count,json=representativeCount,proto3" json:"representative_count,omitempty"`
	Sampled               bool                        `protobuf:"varint,14,opt,name=sampled,proto3" json:"sampled,omitempty"`
	Root                  bool                        `protobuf:"varint,15,opt,name=root,proto3" json:"root,omitempty"`
	ProfilerStackTraceIds []string                    `protobuf:"bytes,16,rep,name=profiler_stack_trace_ids,json=profilerStackTraceIds,proto3" json:"profiler_stack_trace_ids,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_transaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetSpanCount() *SpanCount {
	if x != nil {
		return x.SpanCount
	}
	return nil
}

func (x *Transaction) GetUserExperience() *UserExperience {
	if x != nil {
		return x.UserExperience
	}
	return nil
}

func (x *Transaction) GetCustom() []*KeyValue {
	if x != nil {
		return x.Custom
	}
	return nil
}

func (x *Transaction) GetMarks() map[string]*TransactionMark {
	if x != nil {
		return x.Marks
	}
	return nil
}

func (x *Transaction) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Transaction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Transaction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Transaction) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetDurationHistogram() *Histogram {
	if x != nil {
		return x.DurationHistogram
	}
	return nil
}

func (x *Transaction) GetDroppedSpansStats() []*DroppedSpanStats {
	if x != nil {
		return x.DroppedSpansStats
	}
	return nil
}

func (x *Transaction) GetDurationSummary() *SummaryMetric {
	if x != nil {
		return x.DurationSummary
	}
	return nil
}

func (x *Transaction) GetRepresentativeCount() float64 {
	if x != nil {
		return x.RepresentativeCount
	}
	return 0
}

func (x *Transaction) GetSampled() bool {
	if x != nil {
		return x.Sampled
	}
	return false
}

func (x *Transaction) GetRoot() bool {
	if x != nil {
		return x.Root
	}
	return false
}

func (x *Transaction) GetProfilerStackTraceIds() []string {
	if x != nil {
		return x.ProfilerStackTraceIds
	}
	return nil
}

type SpanCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dropped       *uint32                `protobuf:"varint,1,opt,name=dropped,proto3,oneof" json:"dropped,omitempty"`
	Started       *uint32                `protobuf:"varint,2,opt,name=started,proto3,oneof" json:"started,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpanCount) Reset() {
	*x = SpanCount{}
	mi := &file_transaction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpanCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpanCount) ProtoMessage() {}

func (x *SpanCount) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpanCount.ProtoReflect.Descriptor instead.
func (*SpanCount) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *SpanCount) GetDropped() uint32 {
	if x != nil && x.Dropped != nil {
		return *x.Dropped
	}
	return 0
}

func (x *SpanCount) GetStarted() uint32 {
	if x != nil && x.Started != nil {
		return *x.Started
	}
	return 0
}

type TransactionMark struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Measurements  map[string]float64     `protobuf:"bytes,1,rep,name=measurements,proto3" json:"measurements,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionMark) Reset() {
	*x = TransactionMark{}
	mi := &file_transaction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionMark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMark) ProtoMessage() {}

func (x *TransactionMark) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMark.ProtoReflect.Descriptor instead.
func (*TransactionMark) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionMark) GetMeasurements() map[string]float64 {
	if x != nil {
		return x.Measurements
	}
	return nil
}

type DroppedSpanStats struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	DestinationServiceResource string                 `protobuf:"bytes,1,opt,name=destination_service_resource,json=destinationServiceResource,proto3" json:"destination_service_resource,omitempty"`
	ServiceTargetType          string                 `protobuf:"bytes,2,opt,name=service_target_type,json=serviceTargetType,proto3" json:"service_target_type,omitempty"`
	ServiceTargetName          string                 `protobuf:"bytes,3,opt,name=service_target_name,json=serviceTargetName,proto3" json:"service_target_name,omitempty"`
	Outcome                    string                 `protobuf:"bytes,4,opt,name=outcome,proto3" json:"outcome,omitempty"`
	Duration                   *AggregatedDuration    `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *DroppedSpanStats) Reset() {
	*x = DroppedSpanStats{}
	mi := &file_transaction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DroppedSpanStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DroppedSpanStats) ProtoMessage() {}

func (x *DroppedSpanStats) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DroppedSpanStats.ProtoReflect.Descriptor instead.
func (*DroppedSpanStats) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *DroppedSpanStats) GetDestinationServiceResource() string {
	if x != nil {
		return x.DestinationServiceResource
	}
	return ""
}

func (x *DroppedSpanStats) GetServiceTargetType() string {
	if x != nil {
		return x.ServiceTargetType
	}
	return ""
}

func (x *DroppedSpanStats) GetServiceTargetName() string {
	if x != nil {
		return x.ServiceTargetName
	}
	return ""
}

func (x *DroppedSpanStats) GetOutcome() string {
	if x != nil {
		return x.Outcome
	}
	return ""
}

func (x *DroppedSpanStats) GetDuration() *AggregatedDuration {
	if x != nil {
		return x.Duration
	}
	return nil
}

var File_transaction_proto protoreflect.FileDescriptor

const file_transaction_proto_rawDesc = "" +
	"\n" +
	"\x11transaction.proto\x12\x0eelastic.apm.v1\x1a\x10experience.proto\x1a\rmessage.proto\x1a\x0fmetricset.proto\x1a\x0ekeyvalue.proto\"\xde\x06\n" +
	"\vTransaction\x128\n" +
	"\n" +
	"span_count\x18\x01 \x01(\v2\x19.elastic.apm.v1.SpanCountR\tspanCount\x12G\n" +
	"\x0fuser_experience\x18\x02 \x01(\v2\x1e.elastic.apm.v1.UserExperienceR\x0euserExperience\x120\n" +
	"\x06custom\x18\x03 \x03(\v2\x18.elastic.apm.v1.KeyValueR\x06custom\x12<\n" +
	"\x05marks\x18\x04 \x03(\v2&.elastic.apm.v1.Transaction.MarksEntryR\x05marks\x121\n" +
	"\amessage\x18\x05 \x01(\v2\x17.elastic.apm.v1.MessageR\amessage\x12\x12\n" +
	"\x04type\x18\x06 \x01(\tR\x04type\x12\x12\n" +
	"\x04name\x18\a \x01(\tR\x04name\x12\x16\n" +
	"\x06result\x18\b \x01(\tR\x06result\x12\x0e\n" +
	"\x02id\x18\t \x01(\tR\x02id\x12H\n" +
	"\x12duration_histogram\x18\n" +
	" \x01(\v2\x19.elastic.apm.v1.HistogramR\x11durationHistogram\x12P\n" +
	"\x13dropped_spans_stats\x18\v \x03(\v2 .elastic.apm.v1.DroppedSpanStatsR\x11droppedSpansStats\x12H\n" +
	"\x10duration_summary\x18\f \x01(\v2\x1d.elastic.apm.v1.SummaryMetricR\x0fdurationSummary\x121\n" +
	"\x14representative_count\x18\r \x01(\x01R\x13representativeCount\x12\x18\n" +
	"\asampled\x18\x0e \x01(\bR\asampled\x12\x12\n" +
	"\x04root\x18\x0f \x01(\bR\x04root\x127\n" +
	"\x18profiler_stack_trace_ids\x18\x10 \x03(\tR\x15profilerStackTraceIds\x1aY\n" +
	"\n" +
	"MarksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.elastic.apm.v1.TransactionMarkR\x05value:\x028\x01\"a\n" +
	"\tSpanCount\x12\x1d\n" +
	"\adropped\x18\x01 \x01(\rH\x00R\adropped\x88\x01\x01\x12\x1d\n" +
	"\astarted\x18\x02 \x01(\rH\x01R\astarted\x88\x01\x01B\n" +
	"\n" +
	"\b_droppedB\n" +
	"\n" +
	"\b_started\"\xa9\x01\n" +
	"\x0fTransactionMark\x12U\n" +
	"\fmeasurements\x18\x01 \x03(\v21.elastic.apm.v1.TransactionMark.MeasurementsEntryR\fmeasurements\x1a?\n" +
	"\x11MeasurementsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\x8e\x02\n" +
	"\x10DroppedSpanStats\x12@\n" +
	"\x1cdestination_service_resource\x18\x01 \x01(\tR\x1adestinationServiceResource\x12.\n" +
	"\x13service_target_type\x18\x02 \x01(\tR\x11serviceTargetType\x12.\n" +
	"\x13service_target_name\x18\x03 \x01(\tR\x11serviceTargetName\x12\x18\n" +
	"\aoutcome\x18\x04 \x01(\tR\aoutcome\x12>\n" +
	"\bduration\x18\x05 \x01(\v2\".elastic.apm.v1.AggregatedDurationR\bdurationB+Z)github.com/elastic/apm-data/model/modelpbb\x06proto3"

var (
	file_transaction_proto_rawDescOnce sync.Once
	file_transaction_proto_rawDescData []byte
)

func file_transaction_proto_rawDescGZIP() []byte {
	file_transaction_proto_rawDescOnce.Do(func() {
		file_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_transaction_proto_rawDesc), len(file_transaction_proto_rawDesc)))
	})
	return file_transaction_proto_rawDescData
}

var file_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_transaction_proto_goTypes = []any{
	(*Transaction)(nil),        // 0: elastic.apm.v1.Transaction
	(*SpanCount)(nil),          // 1: elastic.apm.v1.SpanCount
	(*TransactionMark)(nil),    // 2: elastic.apm.v1.TransactionMark
	(*DroppedSpanStats)(nil),   // 3: elastic.apm.v1.DroppedSpanStats
	nil,                        // 4: elastic.apm.v1.Transaction.MarksEntry
	nil,                        // 5: elastic.apm.v1.TransactionMark.MeasurementsEntry
	(*UserExperience)(nil),     // 6: elastic.apm.v1.UserExperience
	(*KeyValue)(nil),           // 7: elastic.apm.v1.KeyValue
	(*Message)(nil),            // 8: elastic.apm.v1.Message
	(*Histogram)(nil),          // 9: elastic.apm.v1.Histogram
	(*SummaryMetric)(nil),      // 10: elastic.apm.v1.SummaryMetric
	(*AggregatedDuration)(nil), // 11: elastic.apm.v1.AggregatedDuration
}
var file_transaction_proto_depIdxs = []int32{
	1,  // 0: elastic.apm.v1.Transaction.span_count:type_name -> elastic.apm.v1.SpanCount
	6,  // 1: elastic.apm.v1.Transaction.user_experience:type_name -> elastic.apm.v1.UserExperience
	7,  // 2: elastic.apm.v1.Transaction.custom:type_name -> elastic.apm.v1.KeyValue
	4,  // 3: elastic.apm.v1.Transaction.marks:type_name -> elastic.apm.v1.Transaction.MarksEntry
	8,  // 4: elastic.apm.v1.Transaction.message:type_name -> elastic.apm.v1.Message
	9,  // 5: elastic.apm.v1.Transaction.duration_histogram:type_name -> elastic.apm.v1.Histogram
	3,  // 6: elastic.apm.v1.Transaction.dropped_spans_stats:type_name -> elastic.apm.v1.DroppedSpanStats
	10, // 7: elastic.apm.v1.Transaction.duration_summary:type_name -> elastic.apm.v1.SummaryMetric
	5,  // 8: elastic.apm.v1.TransactionMark.measurements:type_name -> elastic.apm.v1.TransactionMark.MeasurementsEntry
	11, // 9: elastic.apm.v1.DroppedSpanStats.duration:type_name -> elastic.apm.v1.AggregatedDuration
	2,  // 10: elastic.apm.v1.Transaction.MarksEntry.value:type_name -> elastic.apm.v1.TransactionMark
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_transaction_proto_init() }
func file_transaction_proto_init() {
	if File_transaction_proto != nil {
		return
	}
	file_experience_proto_init()
	file_message_proto_init()
	file_metricset_proto_init()
	file_keyvalue_proto_init()
	file_transaction_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_transaction_proto_rawDesc), len(file_transaction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transaction_proto_goTypes,
		DependencyIndexes: file_transaction_proto_depIdxs,
		MessageInfos:      file_transaction_proto_msgTypes,
	}.Build()
	File_transaction_proto = out.File
	file_transaction_proto_goTypes = nil
	file_transaction_proto_depIdxs = nil
}
