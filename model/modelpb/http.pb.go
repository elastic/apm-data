// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: http.proto

package modelpb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HTTP struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *HTTPRequest           `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Response      *HTTPResponse          `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTP) Reset() {
	*x = HTTP{}
	mi := &file_http_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTP) ProtoMessage() {}

func (x *HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTP.ProtoReflect.Descriptor instead.
func (*HTTP) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{0}
}

func (x *HTTP) GetRequest() *HTTPRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *HTTP) GetResponse() *HTTPResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *HTTP) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type HTTPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Body          *structpb.Value        `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Headers       []*HTTPHeader          `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
	Env           []*KeyValue            `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty"`
	Cookies       []*KeyValue            `protobuf:"bytes,4,rep,name=cookies,proto3" json:"cookies,omitempty"`
	Id            string                 `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Method        string                 `protobuf:"bytes,6,opt,name=method,proto3" json:"method,omitempty"`
	Referrer      string                 `protobuf:"bytes,7,opt,name=referrer,proto3" json:"referrer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPRequest) Reset() {
	*x = HTTPRequest{}
	mi := &file_http_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPRequest) ProtoMessage() {}

func (x *HTTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPRequest.ProtoReflect.Descriptor instead.
func (*HTTPRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{1}
}

func (x *HTTPRequest) GetBody() *structpb.Value {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *HTTPRequest) GetHeaders() []*HTTPHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPRequest) GetEnv() []*KeyValue {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *HTTPRequest) GetCookies() []*KeyValue {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *HTTPRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HTTPRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HTTPRequest) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

type HTTPResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Headers         []*HTTPHeader          `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	Finished        *bool                  `protobuf:"varint,2,opt,name=finished,proto3,oneof" json:"finished,omitempty"`
	HeadersSent     *bool                  `protobuf:"varint,3,opt,name=headers_sent,json=headersSent,proto3,oneof" json:"headers_sent,omitempty"`
	TransferSize    *uint64                `protobuf:"varint,4,opt,name=transfer_size,json=transferSize,proto3,oneof" json:"transfer_size,omitempty"`
	EncodedBodySize *uint64                `protobuf:"varint,5,opt,name=encoded_body_size,json=encodedBodySize,proto3,oneof" json:"encoded_body_size,omitempty"`
	DecodedBodySize *uint64                `protobuf:"varint,6,opt,name=decoded_body_size,json=decodedBodySize,proto3,oneof" json:"decoded_body_size,omitempty"`
	StatusCode      uint32                 `protobuf:"varint,7,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HTTPResponse) Reset() {
	*x = HTTPResponse{}
	mi := &file_http_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPResponse) ProtoMessage() {}

func (x *HTTPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPResponse.ProtoReflect.Descriptor instead.
func (*HTTPResponse) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{2}
}

func (x *HTTPResponse) GetHeaders() []*HTTPHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPResponse) GetFinished() bool {
	if x != nil && x.Finished != nil {
		return *x.Finished
	}
	return false
}

func (x *HTTPResponse) GetHeadersSent() bool {
	if x != nil && x.HeadersSent != nil {
		return *x.HeadersSent
	}
	return false
}

func (x *HTTPResponse) GetTransferSize() uint64 {
	if x != nil && x.TransferSize != nil {
		return *x.TransferSize
	}
	return 0
}

func (x *HTTPResponse) GetEncodedBodySize() uint64 {
	if x != nil && x.EncodedBodySize != nil {
		return *x.EncodedBodySize
	}
	return 0
}

func (x *HTTPResponse) GetDecodedBodySize() uint64 {
	if x != nil && x.DecodedBodySize != nil {
		return *x.DecodedBodySize
	}
	return 0
}

func (x *HTTPResponse) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

var File_http_proto protoreflect.FileDescriptor

const file_http_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"http.proto\x12\x0eelastic.apm.v1\x1a\x1cgoogle/protobuf/struct.proto\x1a\rheaders.proto\x1a\x0ekeyvalue.proto\"\x91\x01\n" +
	"\x04HTTP\x125\n" +
	"\arequest\x18\x01 \x01(\v2\x1b.elastic.apm.v1.HTTPRequestR\arequest\x128\n" +
	"\bresponse\x18\x02 \x01(\v2\x1c.elastic.apm.v1.HTTPResponseR\bresponse\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\"\x93\x02\n" +
	"\vHTTPRequest\x12*\n" +
	"\x04body\x18\x01 \x01(\v2\x16.google.protobuf.ValueR\x04body\x124\n" +
	"\aheaders\x18\x02 \x03(\v2\x1a.elastic.apm.v1.HTTPHeaderR\aheaders\x12*\n" +
	"\x03env\x18\x03 \x03(\v2\x18.elastic.apm.v1.KeyValueR\x03env\x122\n" +
	"\acookies\x18\x04 \x03(\v2\x18.elastic.apm.v1.KeyValueR\acookies\x12\x0e\n" +
	"\x02id\x18\x05 \x01(\tR\x02id\x12\x16\n" +
	"\x06method\x18\x06 \x01(\tR\x06method\x12\x1a\n" +
	"\breferrer\x18\a \x01(\tR\breferrer\"\x96\x03\n" +
	"\fHTTPResponse\x124\n" +
	"\aheaders\x18\x01 \x03(\v2\x1a.elastic.apm.v1.HTTPHeaderR\aheaders\x12\x1f\n" +
	"\bfinished\x18\x02 \x01(\bH\x00R\bfinished\x88\x01\x01\x12&\n" +
	"\fheaders_sent\x18\x03 \x01(\bH\x01R\vheadersSent\x88\x01\x01\x12(\n" +
	"\rtransfer_size\x18\x04 \x01(\x04H\x02R\ftransferSize\x88\x01\x01\x12/\n" +
	"\x11encoded_body_size\x18\x05 \x01(\x04H\x03R\x0fencodedBodySize\x88\x01\x01\x12/\n" +
	"\x11decoded_body_size\x18\x06 \x01(\x04H\x04R\x0fdecodedBodySize\x88\x01\x01\x12\x1f\n" +
	"\vstatus_code\x18\a \x01(\rR\n" +
	"statusCodeB\v\n" +
	"\t_finishedB\x0f\n" +
	"\r_headers_sentB\x10\n" +
	"\x0e_transfer_sizeB\x14\n" +
	"\x12_encoded_body_sizeB\x14\n" +
	"\x12_decoded_body_sizeB+Z)github.com/elastic/apm-data/model/modelpbb\x06proto3"

var (
	file_http_proto_rawDescOnce sync.Once
	file_http_proto_rawDescData []byte
)

func file_http_proto_rawDescGZIP() []byte {
	file_http_proto_rawDescOnce.Do(func() {
		file_http_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_http_proto_rawDesc), len(file_http_proto_rawDesc)))
	})
	return file_http_proto_rawDescData
}

var file_http_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_http_proto_goTypes = []any{
	(*HTTP)(nil),           // 0: elastic.apm.v1.HTTP
	(*HTTPRequest)(nil),    // 1: elastic.apm.v1.HTTPRequest
	(*HTTPResponse)(nil),   // 2: elastic.apm.v1.HTTPResponse
	(*structpb.Value)(nil), // 3: google.protobuf.Value
	(*HTTPHeader)(nil),     // 4: elastic.apm.v1.HTTPHeader
	(*KeyValue)(nil),       // 5: elastic.apm.v1.KeyValue
}
var file_http_proto_depIdxs = []int32{
	1, // 0: elastic.apm.v1.HTTP.request:type_name -> elastic.apm.v1.HTTPRequest
	2, // 1: elastic.apm.v1.HTTP.response:type_name -> elastic.apm.v1.HTTPResponse
	3, // 2: elastic.apm.v1.HTTPRequest.body:type_name -> google.protobuf.Value
	4, // 3: elastic.apm.v1.HTTPRequest.headers:type_name -> elastic.apm.v1.HTTPHeader
	5, // 4: elastic.apm.v1.HTTPRequest.env:type_name -> elastic.apm.v1.KeyValue
	5, // 5: elastic.apm.v1.HTTPRequest.cookies:type_name -> elastic.apm.v1.KeyValue
	4, // 6: elastic.apm.v1.HTTPResponse.headers:type_name -> elastic.apm.v1.HTTPHeader
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_http_proto_init() }
func file_http_proto_init() {
	if File_http_proto != nil {
		return
	}
	file_headers_proto_init()
	file_keyvalue_proto_init()
	file_http_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_http_proto_rawDesc), len(file_http_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_http_proto_goTypes,
		DependencyIndexes: file_http_proto_depIdxs,
		MessageInfos:      file_http_proto_msgTypes,
	}.Build()
	File_http_proto = out.File
	file_http_proto_goTypes = nil
	file_http_proto_depIdxs = nil
}
