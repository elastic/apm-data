// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: error.proto

package modelpb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Custom        []*KeyValue            `protobuf:"bytes,1,rep,name=custom,proto3" json:"custom,omitempty"`
	Exception     *Exception             `protobuf:"bytes,2,opt,name=exception,proto3" json:"exception,omitempty"`
	Log           *ErrorLog              `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	GroupingKey   string                 `protobuf:"bytes,5,opt,name=grouping_key,json=groupingKey,proto3" json:"grouping_key,omitempty"`
	Culprit       string                 `protobuf:"bytes,6,opt,name=culprit,proto3" json:"culprit,omitempty"`
	StackTrace    string                 `protobuf:"bytes,7,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	Message       string                 `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	Type          string                 `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_error_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_error_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_error_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCustom() []*KeyValue {
	if x != nil {
		return x.Custom
	}
	return nil
}

func (x *Error) GetException() *Exception {
	if x != nil {
		return x.Exception
	}
	return nil
}

func (x *Error) GetLog() *ErrorLog {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *Error) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Error) GetGroupingKey() string {
	if x != nil {
		return x.GroupingKey
	}
	return ""
}

func (x *Error) GetCulprit() string {
	if x != nil {
		return x.Culprit
	}
	return ""
}

func (x *Error) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Exception struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Module        string                 `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Attributes    []*KeyValue            `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Stacktrace    []*StacktraceFrame     `protobuf:"bytes,5,rep,name=stacktrace,proto3" json:"stacktrace,omitempty"`
	Type          string                 `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Handled       *bool                  `protobuf:"varint,7,opt,name=handled,proto3,oneof" json:"handled,omitempty"`
	Cause         []*Exception           `protobuf:"bytes,8,rep,name=cause,proto3" json:"cause,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Exception) Reset() {
	*x = Exception{}
	mi := &file_error_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Exception) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exception) ProtoMessage() {}

func (x *Exception) ProtoReflect() protoreflect.Message {
	mi := &file_error_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exception.ProtoReflect.Descriptor instead.
func (*Exception) Descriptor() ([]byte, []int) {
	return file_error_proto_rawDescGZIP(), []int{1}
}

func (x *Exception) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Exception) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *Exception) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Exception) GetAttributes() []*KeyValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Exception) GetStacktrace() []*StacktraceFrame {
	if x != nil {
		return x.Stacktrace
	}
	return nil
}

func (x *Exception) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Exception) GetHandled() bool {
	if x != nil && x.Handled != nil {
		return *x.Handled
	}
	return false
}

func (x *Exception) GetCause() []*Exception {
	if x != nil {
		return x.Cause
	}
	return nil
}

type ErrorLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Level         string                 `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	ParamMessage  string                 `protobuf:"bytes,3,opt,name=param_message,json=paramMessage,proto3" json:"param_message,omitempty"`
	LoggerName    string                 `protobuf:"bytes,4,opt,name=logger_name,json=loggerName,proto3" json:"logger_name,omitempty"`
	Stacktrace    []*StacktraceFrame     `protobuf:"bytes,5,rep,name=stacktrace,proto3" json:"stacktrace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorLog) Reset() {
	*x = ErrorLog{}
	mi := &file_error_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorLog) ProtoMessage() {}

func (x *ErrorLog) ProtoReflect() protoreflect.Message {
	mi := &file_error_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorLog.ProtoReflect.Descriptor instead.
func (*ErrorLog) Descriptor() ([]byte, []int) {
	return file_error_proto_rawDescGZIP(), []int{2}
}

func (x *ErrorLog) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorLog) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *ErrorLog) GetParamMessage() string {
	if x != nil {
		return x.ParamMessage
	}
	return ""
}

func (x *ErrorLog) GetLoggerName() string {
	if x != nil {
		return x.LoggerName
	}
	return ""
}

func (x *ErrorLog) GetStacktrace() []*StacktraceFrame {
	if x != nil {
		return x.Stacktrace
	}
	return nil
}

var File_error_proto protoreflect.FileDescriptor

const file_error_proto_rawDesc = "" +
	"\n" +
	"\verror.proto\x12\x0eelastic.apm.v1\x1a\x10stacktrace.proto\x1a\x0ekeyvalue.proto\"\xba\x02\n" +
	"\x05Error\x120\n" +
	"\x06custom\x18\x01 \x03(\v2\x18.elastic.apm.v1.KeyValueR\x06custom\x127\n" +
	"\texception\x18\x02 \x01(\v2\x19.elastic.apm.v1.ExceptionR\texception\x12*\n" +
	"\x03log\x18\x03 \x01(\v2\x18.elastic.apm.v1.ErrorLogR\x03log\x12\x0e\n" +
	"\x02id\x18\x04 \x01(\tR\x02id\x12!\n" +
	"\fgrouping_key\x18\x05 \x01(\tR\vgroupingKey\x12\x18\n" +
	"\aculprit\x18\x06 \x01(\tR\aculprit\x12\x1f\n" +
	"\vstack_trace\x18\a \x01(\tR\n" +
	"stackTrace\x12\x18\n" +
	"\amessage\x18\b \x01(\tR\amessage\x12\x12\n" +
	"\x04type\x18\t \x01(\tR\x04type\"\xbc\x02\n" +
	"\tException\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x16\n" +
	"\x06module\x18\x02 \x01(\tR\x06module\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x128\n" +
	"\n" +
	"attributes\x18\x04 \x03(\v2\x18.elastic.apm.v1.KeyValueR\n" +
	"attributes\x12?\n" +
	"\n" +
	"stacktrace\x18\x05 \x03(\v2\x1f.elastic.apm.v1.StacktraceFrameR\n" +
	"stacktrace\x12\x12\n" +
	"\x04type\x18\x06 \x01(\tR\x04type\x12\x1d\n" +
	"\ahandled\x18\a \x01(\bH\x00R\ahandled\x88\x01\x01\x12/\n" +
	"\x05cause\x18\b \x03(\v2\x19.elastic.apm.v1.ExceptionR\x05causeB\n" +
	"\n" +
	"\b_handled\"\xc1\x01\n" +
	"\bErrorLog\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x14\n" +
	"\x05level\x18\x02 \x01(\tR\x05level\x12#\n" +
	"\rparam_message\x18\x03 \x01(\tR\fparamMessage\x12\x1f\n" +
	"\vlogger_name\x18\x04 \x01(\tR\n" +
	"loggerName\x12?\n" +
	"\n" +
	"stacktrace\x18\x05 \x03(\v2\x1f.elastic.apm.v1.StacktraceFrameR\n" +
	"stacktraceB+Z)github.com/elastic/apm-data/model/modelpbb\x06proto3"

var (
	file_error_proto_rawDescOnce sync.Once
	file_error_proto_rawDescData []byte
)

func file_error_proto_rawDescGZIP() []byte {
	file_error_proto_rawDescOnce.Do(func() {
		file_error_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_error_proto_rawDesc), len(file_error_proto_rawDesc)))
	})
	return file_error_proto_rawDescData
}

var file_error_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_error_proto_goTypes = []any{
	(*Error)(nil),           // 0: elastic.apm.v1.Error
	(*Exception)(nil),       // 1: elastic.apm.v1.Exception
	(*ErrorLog)(nil),        // 2: elastic.apm.v1.ErrorLog
	(*KeyValue)(nil),        // 3: elastic.apm.v1.KeyValue
	(*StacktraceFrame)(nil), // 4: elastic.apm.v1.StacktraceFrame
}
var file_error_proto_depIdxs = []int32{
	3, // 0: elastic.apm.v1.Error.custom:type_name -> elastic.apm.v1.KeyValue
	1, // 1: elastic.apm.v1.Error.exception:type_name -> elastic.apm.v1.Exception
	2, // 2: elastic.apm.v1.Error.log:type_name -> elastic.apm.v1.ErrorLog
	3, // 3: elastic.apm.v1.Exception.attributes:type_name -> elastic.apm.v1.KeyValue
	4, // 4: elastic.apm.v1.Exception.stacktrace:type_name -> elastic.apm.v1.StacktraceFrame
	1, // 5: elastic.apm.v1.Exception.cause:type_name -> elastic.apm.v1.Exception
	4, // 6: elastic.apm.v1.ErrorLog.stacktrace:type_name -> elastic.apm.v1.StacktraceFrame
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_error_proto_init() }
func file_error_proto_init() {
	if File_error_proto != nil {
		return
	}
	file_stacktrace_proto_init()
	file_keyvalue_proto_init()
	file_error_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_error_proto_rawDesc), len(file_error_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_error_proto_goTypes,
		DependencyIndexes: file_error_proto_depIdxs,
		MessageInfos:      file_error_proto_msgTypes,
	}.Build()
	File_error_proto = out.File
	file_error_proto_goTypes = nil
	file_error_proto_depIdxs = nil
}
