// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: log.proto

package modelpb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         string                 `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Logger        string                 `protobuf:"bytes,2,opt,name=logger,proto3" json:"logger,omitempty"`
	Origin        *LogOrigin             `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_log_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{0}
}

func (x *Log) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Log) GetLogger() string {
	if x != nil {
		return x.Logger
	}
	return ""
}

func (x *Log) GetOrigin() *LogOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type LogOrigin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FunctionName  string                 `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	File          *LogOriginFile         `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogOrigin) Reset() {
	*x = LogOrigin{}
	mi := &file_log_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogOrigin) ProtoMessage() {}

func (x *LogOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogOrigin.ProtoReflect.Descriptor instead.
func (*LogOrigin) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{1}
}

func (x *LogOrigin) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *LogOrigin) GetFile() *LogOriginFile {
	if x != nil {
		return x.File
	}
	return nil
}

type LogOriginFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Line          uint32                 `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogOriginFile) Reset() {
	*x = LogOriginFile{}
	mi := &file_log_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogOriginFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogOriginFile) ProtoMessage() {}

func (x *LogOriginFile) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogOriginFile.ProtoReflect.Descriptor instead.
func (*LogOriginFile) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{2}
}

func (x *LogOriginFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogOriginFile) GetLine() uint32 {
	if x != nil {
		return x.Line
	}
	return 0
}

var File_log_proto protoreflect.FileDescriptor

const file_log_proto_rawDesc = "" +
	"\n" +
	"\tlog.proto\x12\x0eelastic.apm.v1\"f\n" +
	"\x03Log\x12\x14\n" +
	"\x05level\x18\x01 \x01(\tR\x05level\x12\x16\n" +
	"\x06logger\x18\x02 \x01(\tR\x06logger\x121\n" +
	"\x06origin\x18\x03 \x01(\v2\x19.elastic.apm.v1.LogOriginR\x06origin\"c\n" +
	"\tLogOrigin\x12#\n" +
	"\rfunction_name\x18\x01 \x01(\tR\ffunctionName\x121\n" +
	"\x04file\x18\x02 \x01(\v2\x1d.elastic.apm.v1.LogOriginFileR\x04file\"7\n" +
	"\rLogOriginFile\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04line\x18\x02 \x01(\rR\x04lineB+Z)github.com/elastic/apm-data/model/modelpbb\x06proto3"

var (
	file_log_proto_rawDescOnce sync.Once
	file_log_proto_rawDescData []byte
)

func file_log_proto_rawDescGZIP() []byte {
	file_log_proto_rawDescOnce.Do(func() {
		file_log_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_log_proto_rawDesc), len(file_log_proto_rawDesc)))
	})
	return file_log_proto_rawDescData
}

var file_log_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_log_proto_goTypes = []any{
	(*Log)(nil),           // 0: elastic.apm.v1.Log
	(*LogOrigin)(nil),     // 1: elastic.apm.v1.LogOrigin
	(*LogOriginFile)(nil), // 2: elastic.apm.v1.LogOriginFile
}
var file_log_proto_depIdxs = []int32{
	1, // 0: elastic.apm.v1.Log.origin:type_name -> elastic.apm.v1.LogOrigin
	2, // 1: elastic.apm.v1.LogOrigin.file:type_name -> elastic.apm.v1.LogOriginFile
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_log_proto_init() }
func file_log_proto_init() {
	if File_log_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_log_proto_rawDesc), len(file_log_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_log_proto_goTypes,
		DependencyIndexes: file_log_proto_depIdxs,
		MessageInfos:      file_log_proto_msgTypes,
	}.Build()
	File_log_proto = out.File
	file_log_proto_goTypes = nil
	file_log_proto_depIdxs = nil
}
