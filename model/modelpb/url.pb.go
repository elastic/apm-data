// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: url.proto

package modelpb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type URL struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Original      string                 `protobuf:"bytes,1,opt,name=original,proto3" json:"original,omitempty"`
	Scheme        string                 `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Full          string                 `protobuf:"bytes,3,opt,name=full,proto3" json:"full,omitempty"`
	Domain        string                 `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Path          string                 `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	Query         string                 `protobuf:"bytes,6,opt,name=query,proto3" json:"query,omitempty"`
	Fragment      string                 `protobuf:"bytes,7,opt,name=fragment,proto3" json:"fragment,omitempty"`
	Port          uint32                 `protobuf:"varint,8,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *URL) Reset() {
	*x = URL{}
	mi := &file_url_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *URL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URL) ProtoMessage() {}

func (x *URL) ProtoReflect() protoreflect.Message {
	mi := &file_url_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URL.ProtoReflect.Descriptor instead.
func (*URL) Descriptor() ([]byte, []int) {
	return file_url_proto_rawDescGZIP(), []int{0}
}

func (x *URL) GetOriginal() string {
	if x != nil {
		return x.Original
	}
	return ""
}

func (x *URL) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *URL) GetFull() string {
	if x != nil {
		return x.Full
	}
	return ""
}

func (x *URL) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *URL) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *URL) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *URL) GetFragment() string {
	if x != nil {
		return x.Fragment
	}
	return ""
}

func (x *URL) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

var File_url_proto protoreflect.FileDescriptor

const file_url_proto_rawDesc = "" +
	"\n" +
	"\turl.proto\x12\x0eelastic.apm.v1\"\xbf\x01\n" +
	"\x03URL\x12\x1a\n" +
	"\boriginal\x18\x01 \x01(\tR\boriginal\x12\x16\n" +
	"\x06scheme\x18\x02 \x01(\tR\x06scheme\x12\x12\n" +
	"\x04full\x18\x03 \x01(\tR\x04full\x12\x16\n" +
	"\x06domain\x18\x04 \x01(\tR\x06domain\x12\x12\n" +
	"\x04path\x18\x05 \x01(\tR\x04path\x12\x14\n" +
	"\x05query\x18\x06 \x01(\tR\x05query\x12\x1a\n" +
	"\bfragment\x18\a \x01(\tR\bfragment\x12\x12\n" +
	"\x04port\x18\b \x01(\rR\x04portB+Z)github.com/elastic/apm-data/model/modelpbb\x06proto3"

var (
	file_url_proto_rawDescOnce sync.Once
	file_url_proto_rawDescData []byte
)

func file_url_proto_rawDescGZIP() []byte {
	file_url_proto_rawDescOnce.Do(func() {
		file_url_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_url_proto_rawDesc), len(file_url_proto_rawDesc)))
	})
	return file_url_proto_rawDescData
}

var file_url_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_url_proto_goTypes = []any{
	(*URL)(nil), // 0: elastic.apm.v1.URL
}
var file_url_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_url_proto_init() }
func file_url_proto_init() {
	if File_url_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_url_proto_rawDesc), len(file_url_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_url_proto_goTypes,
		DependencyIndexes: file_url_proto_depIdxs,
		MessageInfos:      file_url_proto_msgTypes,
	}.Build()
	File_url_proto = out.File
	file_url_proto_goTypes = nil
	file_url_proto_depIdxs = nil
}
